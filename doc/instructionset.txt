mov rX, imm32
B0 [X]F, 00 00 00 00 //litte endian

mov rX, rX //32 bits registers
B1 [X][X]

---------------------------------

add r0, r1
A0

sub r0, r1
A2

mul r0, r1
A4

div r0, r1, //reszta r2
A6

----------------------------------

and r0, r1
A8

or r0, r1
AA

xor r0, r1
AC

not r0
AE

//unsigned shift left
sul r0, r1
C0

//unsigned shift right
sur r0, r1
C1

//signed shift left
ssl r0, r1
C2

//signed shift right
ssr r0, r1
C3

//rotate unsigned left
rul r0, r1
C4

//rotate unsigned right
rul r0, r1
C5

----------------------------------

push rX
D0 [X]F

pop rX
D2 [X]F

---------------------------------

ldr rX, rX //address, value
E0 [X][X]

str rX, rX
E2 [X][X]

---------------------------------
//IP == rX
jmp rX
F0 [X]F